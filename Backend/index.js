import express from 'express';
import cors from 'cors';


const app = express();

app.use(express.json());
app.use(cors());


// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
app.get("/", (req, res) => {
    res.send("<h2>Vibus-ML-278 Server is running</h2>");
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–∞–π–ª–µ
app.post('/file', (req, res) => {
    const fileInfo = req.body;

    if (!fileInfo.file_name || !fileInfo.file_path) {
        return res.status(400).json({ message: '–û—à–∏–±–∫–∞: file_name –∏ file_path –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.' });
    }

    console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ —Ñ–∞–π–ª–µ:');
    console.log(`–ò–º—è —Ñ–∞–π–ª–∞: ${fileInfo.file_name}`);
    console.log(`–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: ${fileInfo.file_path}`);

    res.status(200).json({ message: '–î–∞–Ω–Ω—ã–µ –æ —Ñ–∞–π–ª–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã.', data: fileInfo });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–∏—Å–∫–æ–≤
app.post('/disk', (req, res) => {
    const disks = req.body;

    if (!disks.disks || !Array.isArray(disks.disks)) {
        return res.status(400).json({ message: '–û—à–∏–±–∫–∞: –æ–∂–∏–¥–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ disks.' });
    }

    console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –¥–∏—Å–∫–∞—Ö:');
    disks.disks.forEach((disk, index) => {
        console.log(`  [${index}] ${disk}`);
    });

    res.status(200).json({ message: '–î–∞–Ω–Ω—ã–µ –æ –¥–∏—Å–∫–∞—Ö —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã.', data: disks });
});

app.get('/zapr', async (req, res) => {
    try {
        const post = ""
    res.json(post)
    }   
    catch (err){
        res.status(500).json({
            message: '–Ω–µ—É–¥–∞–ª–æ—Å—å —Å–æ–ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å—é'
        });
        console.log(err)
   }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
app.post('/dirs', (req, res) => {
    const dirs = req.body;

    if (!dirs.directories || !Array.isArray(dirs.directories)) {
        return res.status(400).json({ message: '–û—à–∏–±–∫–∞: –æ–∂–∏–¥–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ directories.' });
    }

    console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö:');
    dirs.directories.forEach((dir, index) => {
        console.log(`  [${index}] ${dir}`);
    });

    res.status(200).json({ message: '–î–∞–Ω–Ω—ã–µ –æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã.', data: dirs });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
app.use((req, res) => {
    res.status(404).send('–û—à–∏–±–∫–∞ 404: –ø—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω.');
});







// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = 5050;
app.listen(PORT, (err) => {
    if (err) {
        return console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
    }
    console.log(` http://localhost:${PORT}`);
});